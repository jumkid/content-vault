# IDENTITY (ContextIdApplicationContextInitializer)
spring.application.name = content-vault
spring.application.version = @project.version@
spring.application.description = The content vault provides file storage and streaming services
spring.application.title = Content Vault with restful API

# spring boot profiles
spring.profiles.active = dev
spring.output.ansi.enabled = ALWAYS

###################
# Actuator
###################
management.endpoints.web.exposure.include = *
management.endpoint.health.probes.enabled = true
management.endpoint.health.show-details = always
management.endpoint.metrics.enabled = true
management.health.elasticsearch.enabled = false

###################
# API Documentation
###################
springdoc.api-docs.path=/api-docs

# ----------------------------------------
# WEB PROPERTIES
# ----------------------------------------
server.port = 8082
server.ssl.enabled = false
server.ssl.key-store = ../keystore.p12

# Whether response compression is enabled.
server.compression.enabled = false
# http settings
server.servlet.encoding.force = false
server.servlet.encoding.charset = UTF-8
# List of user-agents to exclude from compression.
#server.compression.excluded-user-agents=

# Comma-separated list of MIME types that should be compressed.
server.compression.mime-types = text/html,text/xml,text/plain,text/css,text/javascript,application/javascript

# Minimum "Content-Length" value that is required for compression to be performed.
server.compression.min-response-size = 2048

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold = 128KB
# Max file size.
spring.servlet.multipart.max-file-size = 200MB
# Max Request Size
spring.servlet.multipart.max-request-size = 215MB

# logging
logging.file.path = logs
logging.level.root = WARN
logging.level.org.springframework.security = INFO
logging.level.com.jumkid.share = DEBUG
logging.level.com.jumkid.vault = DEBUG
logging.pattern.console=%clr(%d{yy-MM-dd E HH:mm:ss.SSS}){blue} %clr(%-5p) %clr([JID:%X{journey_id}]){faint} %clr(---){faint} %clr([%8.15t]){cyan} %clr(%-40.40logger{0}){blue} %clr(:){red} %clr(%m){faint}%n

# ----------------------------------------
# Content Vault Properties
# ----------------------------------------
# enable spring security token filter
# the com.jumkid.jwt.token.enable flag should be always true as api authorization rely it
com.jumkid.jwt.token.enable = true
com.jumkid.jwt.token.validate = false
com.jumkid.jwt.token.client-id = content-vault
com.jumkid.jwt.token.fetch-url = http://keycloak:8080/realms/jumkid/protocol/openid-connect/token
com.jumkid.jwt.token.introspect-url = http://keycloak:8080/realms/jumkid/protocol/openid-connect/userinfo
com.jumkid.api.user-info = http://127.0.0.1:80/v1/user

# All files uploaded through the REST API will be stored in this directory
file.upload-dir = ./uploads
# media file storage path
vault.data.home = ./data
# thumbnail sizes
vault.thumbnail.small = 108
vault.thumbnail.medium = 380
vault.thumbnail.large = 640
# thumbnail file type icon mapping.
# key supports regex
vault.thumbnail.icon-mappings = {\
  '^video':'icon_video.png', \
  '^audio':'icon_audio.png', \
  '^application/pdf':'icon_pdf.png', \
  'powerpoint':'icon_ppt.png', \
  'excel':'icon_xls.png', \
  'word':'icon_doc.png', \
  'gallery':'icon_gallery.png', \
  'avatar':'icon_avatar.png'\
  }

# storage mode: local | hdfs
vault.storage.mode = local
# hdfs namenode host
hdfs.namenode.host = 0.0.0.0
#hdfs namenode port
hdfs.namenode.port = 8020

# ----------------------------------------
# ELASTICSEARCH PROPERTIES
# ----------------------------------------
elasticsearch.cluster.name = eslocal
elasticsearch.host = localhost
elasticsearch.port = 9200
elasticsearch.user.name = elastic
elasticsearch.user.password = bigdata
elasticsearch.http.protocol = https
elasticsearch.keystore.format = pkcs12
elasticsearch.keystore.path = certs/ca.crt
elasticsearch.keystore.pass =

# ----------------------------------------
# KAFKA PROPERTIES
# ----------------------------------------
spring.kafka.bootstrap-servers = localhost:9092
spring.kafka.consumer.group-id = 0
com.jumkid.events.content.content-delete = content.delete

# ----------------------------------------
# internal apis
# ----------------------------------------
# user profile api
internal.api.user = http://localhost/v1/user